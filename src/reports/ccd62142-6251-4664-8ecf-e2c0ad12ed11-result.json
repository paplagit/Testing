{"name": "test_IntializeBrowser[chrome]", "status": "broken", "statusDetails": {"message": "ModuleNotFoundError: No module named 'config'", "trace": "request = <SubRequest 'init_driver' for <Function test_IntializeBrowser[chrome]>>\n\n    @pytest.fixture(params=[\"chrome\"], scope=\"class\") # scope = class,\n    # because we want the conftest to run only once for each class, not for each method\n    def init_driver(request):\n        from selenium import webdriver\n        from selenium.webdriver.chrome.service import Service\n>       from config import TestData\nE       ModuleNotFoundError: No module named 'config'\n\ntests\\conftest.py:12: ModuleNotFoundError"}, "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1709057030232, "stop": 1709057030232, "uuid": "e01fb899-46ad-4402-8206-1cb722ba6d8e", "historyId": "f1ad105b42054e6e73b715eb34111c79", "testCaseId": "58412193dea22b87e758c1e94482070f", "fullName": "tests.test_sample1.Test_OpenPage#test_IntializeBrowser", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sample1"}, {"name": "subSuite", "value": "Test_OpenPage"}, {"name": "host", "value": "BLRKEC518139L"}, {"name": "thread", "value": "5340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sample1"}]}